// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TuristTravel.DAL;

#nullable disable

namespace TuristTravel.DAL.Migrations
{
    [DbContext(typeof(ClientManagerDbContext))]
    [Migration("20240606215201_brojZvjezdica")]
    partial class brojZvjezdica
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TuristTravel.Model.Destinacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Destinacije");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Naziv = "Zagreb",
                            Opis = "Very nice"
                        });
                });

            modelBuilder.Entity("TuristTravel.Model.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("brojZvjezdica")
                        .HasColumnType("int");

                    b.Property<int>("cijenaNocenja")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Hoteli");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adresa = "Zagreb",
                            Naziv = "Sheraton",
                            brojZvjezdica = 4,
                            cijenaNocenja = 100
                        });
                });

            modelBuilder.Entity("TuristTravel.Model.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PonudaID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PonudaID");

                    b.ToTable("Korisnici");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adresa = "Pustodol Začretski 49a",
                            Email = "tin.petrekovic@gmail.com",
                            Ime = "Tin",
                            Password = "lozinka123",
                            Prezime = "Petreković"
                        });
                });

            modelBuilder.Entity("TuristTravel.Model.Ponuda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cijena")
                        .HasColumnType("int");

                    b.Property<int>("DestinacijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("krajPutovanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("pocetakPutovanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("DestinacijaID");

                    b.ToTable("Ponude");
                });

            modelBuilder.Entity("TuristTravel.Model.Putovanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("PonudaID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("HotelID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("PonudaID");

                    b.ToTable("Putovanja");
                });

            modelBuilder.Entity("TuristTravel.Model.Korisnik", b =>
                {
                    b.HasOne("TuristTravel.Model.Ponuda", null)
                        .WithMany("Korisnici")
                        .HasForeignKey("PonudaID");
                });

            modelBuilder.Entity("TuristTravel.Model.Ponuda", b =>
                {
                    b.HasOne("TuristTravel.Model.Destinacija", "Destinacija")
                        .WithMany("Ponude")
                        .HasForeignKey("DestinacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destinacija");
                });

            modelBuilder.Entity("TuristTravel.Model.Putovanje", b =>
                {
                    b.HasOne("TuristTravel.Model.Hotel", "Hotel")
                        .WithMany("Putovanja")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuristTravel.Model.Korisnik", "Korisnik")
                        .WithMany("Putovanja")
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuristTravel.Model.Ponuda", "Ponuda")
                        .WithMany()
                        .HasForeignKey("PonudaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Korisnik");

                    b.Navigation("Ponuda");
                });

            modelBuilder.Entity("TuristTravel.Model.Destinacija", b =>
                {
                    b.Navigation("Ponude");
                });

            modelBuilder.Entity("TuristTravel.Model.Hotel", b =>
                {
                    b.Navigation("Putovanja");
                });

            modelBuilder.Entity("TuristTravel.Model.Korisnik", b =>
                {
                    b.Navigation("Putovanja");
                });

            modelBuilder.Entity("TuristTravel.Model.Ponuda", b =>
                {
                    b.Navigation("Korisnici");
                });
#pragma warning restore 612, 618
        }
    }
}
